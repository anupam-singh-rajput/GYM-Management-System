{
 "allow_comments": 0,
 "allow_delete": 0,
 "allow_edit": 0,
 "allow_incomplete": 0,
 "allow_multiple": 0,
 "allow_print": 0,
 "anonymous": 0,
 "apply_document_permissions": 0,
 "button_label": "Save",
 "client_script": "// Utility to get cookie by name\nfunction getCookieValue(name) {\n    const cookies = document.cookie.split('; ');\n    for (const cookie of cookies) {\n        const [key, value] = cookie.split('=');\n        if (key === name) {\n            return decodeURIComponent(value);\n        }\n    }\n    return null;\n}\n\nfrappe.web_form.after_load = () => {\n    const email = getCookieValue('user_id');\n    console.log('user_id from cookie:', email);\n\n    if (!email) {\n        console.error('No user_id cookie found');\n        return;\n    }\n\n    // Set the email field and make readonly immediately\n    const emailField = document.querySelector('input[data-fieldname=\"email\"]');\n    if (emailField) {\n        emailField.value = email;\n        emailField.setAttribute('readonly', true);\n    } else {\n        console.warn('Email field not found');\n    }\n\n    // Fetch user details via server call\n    frappe.call({\n        method: 'gym.gym.api.get_member_details',  // Adjust if your API path is different\n        args: { email: email },\n        callback: function(r) {\n            if (!r.message) {\n                console.warn('No member details found for email:', email);\n                return;\n            }\n            const data = r.message;\n\n            // Map of form fields to data keys\n            const fieldsToFill = {\n                contact: 'contact',\n                gender: 'gender',\n                address: 'address',\n                plans: 'plan',  // adjust key if plan is named differently\n                joining_date: 'joining_date',\n                ending_date: 'ending_date',\n                assign_locker: 'assign_locker',\n                available_locker: 'available_locker',\n                final_price: 'final_price'\n            };\n\n            // Fill and make readonly the fields\n            for (const [fieldname, key] of Object.entries(fieldsToFill)) {\n                const fieldInput = document.querySelector(`[data-fieldname=\"${fieldname}\"]`);\n                if (fieldInput && data[key] !== undefined && data[key] !== null) {\n                    fieldInput.value = data[key];\n                    fieldInput.setAttribute('readonly', true);\n                }\n            }\n        },\n        error: function(err) {\n            console.error('Error fetching member details:', err);\n        }\n    });\n};\n",
 "condition_json": "[]",
 "creation": "2025-06-30 16:54:53.772063",
 "doc_type": "GYM Membership",
 "docstatus": 0,
 "doctype": "Web Form",
 "idx": 0,
 "is_standard": 1,
 "list_columns": [],
 "login_required": 0,
 "max_attachment_size": 0,
 "modified": "2025-07-11 17:19:04.210043",
 "modified_by": "Administrator",
 "module": "GYM",
 "name": "gym-membership",
 "owner": "Administrator",
 "published": 1,
 "route": "gym-management/gym-membership",
 "show_attachments": 0,
 "show_list": 0,
 "show_sidebar": 0,
 "title": "Gym Membership",
 "web_form_fields": [
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "user_info_section",
   "fieldtype": "Section Break",
   "hidden": 0,
   "label": "User Info",
   "max_length": 0,
   "max_value": 0,
   "precision": "",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "email",
   "fieldtype": "Link",
   "hidden": 0,
   "label": "Email",
   "max_length": 0,
   "max_value": 0,
   "options": "Gym Members",
   "precision": "",
   "read_only": 0,
   "reqd": 1,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "contact",
   "fieldtype": "Phone",
   "hidden": 0,
   "label": "Contact",
   "max_length": 0,
   "max_value": 0,
   "precision": "",
   "read_only": 0,
   "reqd": 1,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "gender",
   "fieldtype": "Select",
   "hidden": 0,
   "label": "Gender",
   "max_length": 0,
   "max_value": 0,
   "options": "Male\nFemale",
   "precision": "",
   "read_only": 0,
   "reqd": 1,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "address",
   "fieldtype": "Small Text",
   "hidden": 0,
   "label": "Address",
   "max_length": 0,
   "max_value": 0,
   "precision": "",
   "read_only": 0,
   "reqd": 1,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "plans",
   "fieldtype": "Select",
   "hidden": 0,
   "label": "Membership Plan",
   "max_length": 0,
   "max_value": 0,
   "options": "1 Month (\u20b95000)\n3 Months (\u20b99000)\n1 Year (\u20b914000)",
   "precision": "",
   "read_only": 0,
   "reqd": 1,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "joining_date",
   "fieldtype": "Date",
   "hidden": 0,
   "label": "Joining Date",
   "max_length": 0,
   "max_value": 0,
   "precision": "",
   "read_only": 0,
   "reqd": 1,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "ending_date",
   "fieldtype": "Date",
   "hidden": 0,
   "label": "Ending Date",
   "max_length": 0,
   "max_value": 0,
   "precision": "",
   "read_only": 1,
   "reqd": 1,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "assign_locker",
   "fieldtype": "Select",
   "hidden": 0,
   "label": "Assign Locker",
   "max_length": 0,
   "max_value": 0,
   "options": "Yes\nNo",
   "precision": "",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "available_locker",
   "fieldtype": "Link",
   "hidden": 0,
   "label": "Available locker",
   "max_length": 0,
   "max_value": 0,
   "options": "Available Locker",
   "precision": "",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "final_price",
   "fieldtype": "Currency",
   "hidden": 0,
   "label": "Final Price",
   "max_length": 0,
   "max_value": 0,
   "precision": "",
   "read_only": 1,
   "reqd": 0,
   "show_in_filter": 0
  }
 ]
}