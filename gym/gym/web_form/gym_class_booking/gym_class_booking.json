{
 "allow_comments": 0,
 "allow_delete": 0,
 "allow_edit": 0,
 "allow_incomplete": 0,
 "allow_multiple": 0,
 "allow_print": 0,
 "anonymous": 0,
 "apply_document_permissions": 0,
 "button_label": "Save",
 "client_script": "\n    function getCookieValue(name) {\n    const cookies = document.cookie.split('; ');\n    for (const cookie of cookies) {\n        const [key, value] = cookie.split('=');\n        if (key === name) {\n            return decodeURIComponent(value);\n        }\n        }\n        return null;\n    }\n\nconst email = getCookieValue('user_id');\nconsole.log('user_id:', email);\n\n\n\nconst emailField = document.querySelector('input[data-fieldname=\"email\"]');\nemailField.value=email;\nemailField.setAttribute(\"readonly\", true);\n\nconsole.log(\"Hello World\");\n// document.getElementsByClassName(\"nav-avatar\")[0].style.display = \"none\";\n// document.getElementsByClassName(\"navbar-brand\")[0].style.display = \"none\";\ndocument.getElementsByClassName(\"nav-avatar\")[0].style.display = \"none\";\ndocument.getElementsByClassName(\"navbar-brand\")[0].style.display = \"none\";\n\n\nwindow.onload = function() {\n// Hide the element with the class 'nav-avatar'\ndocument.getElementsByClassName(\"nav-avatar\")[0].style.display = \"none\";\ndocument.getElementsByClassName(\"navbar-brand\")[0].style.display = \"none\";\n};\n\n\n\n\nfrappe.web_form.on('class_boooking', function(field, value) {\n\n\n\nfrappe.web_form.set_value('trainer_name', '');\nfrappe.web_form.fields_dict.trainer_name.df.options = '';\nfrappe.web_form.fields_dict.trainer_name.refresh();\n\nif (!value) return;\n\n\nfrappe.call({\nmethod: \"frappe.client.get_list\",\nargs: {\ndoctype: \"TrainerReg\",\nfields: [\"name1\"],\nfilters: {\nspecialization: value\n},\nlimit_page_length: 100\n},\ncallback: function(r) {\nconst trainers = r.message || [];\n\n\nif (trainers.length === 0) {\nconsole.warn('[DEBUG] No trainers found for specialization:', value);\nreturn;\n}\n\n\nconst options = trainers.map(t => t.name1).join('\\n');\n\n\nfrappe.web_form.fields_dict.trainer_name.df.options = options;\nfrappe.web_form.fields_dict.trainer_name.refresh();\n\nconsole.log('[DEBUG] trainer_name select options updated:', options);\n},\nerror: function(err) {\nconsole.error('[ERROR] frappe.call failed:', err);\n}\n});\n});\n",
 "condition_json": "[]",
 "creation": "2025-07-09 16:59:10.340701",
 "doc_type": "Gym Class Booking",
 "docstatus": 0,
 "doctype": "Web Form",
 "idx": 0,
 "is_standard": 1,
 "list_columns": [],
 "login_required": 0,
 "max_attachment_size": 0,
 "modified": "2025-07-11 18:12:54.008382",
 "modified_by": "Administrator",
 "module": "GYM",
 "name": "gym-class-booking",
 "owner": "Administrator",
 "published": 1,
 "route": "gym-management/gym-class-booking",
 "show_attachments": 0,
 "show_list": 0,
 "show_sidebar": 0,
 "title": "Gym Class Booking",
 "web_form_fields": [
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "email",
   "fieldtype": "Data",
   "hidden": 0,
   "label": "Email",
   "max_length": 0,
   "max_value": 0,
   "precision": "",
   "read_only": 0,
   "reqd": 0,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "class_boooking",
   "fieldtype": "Link",
   "hidden": 0,
   "label": "Class Boooking",
   "max_length": 0,
   "max_value": 0,
   "options": "Categories",
   "precision": "",
   "read_only": 0,
   "reqd": 1,
   "show_in_filter": 0
  },
  {
   "allow_read_on_all_link_options": 0,
   "fieldname": "trainer_name",
   "fieldtype": "Select",
   "hidden": 0,
   "label": "Trainer Name",
   "max_length": 0,
   "max_value": 0,
   "precision": "",
   "read_only": 0,
   "reqd": 1,
   "show_in_filter": 0
  }
 ]
}